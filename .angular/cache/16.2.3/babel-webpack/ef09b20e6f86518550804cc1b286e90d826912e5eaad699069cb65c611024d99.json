{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class LoginComponent {\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  login(username, password, userType) {\n    // Aquí puedes implementar la lógica para verificar el inicio de sesión en el lado del cliente.\n    // Por ejemplo, podrías comparar los datos con una lista de usuarios predefinidos.\n    if (userType === 'estudiante' && username === 'estudiante' && password === 'estudiante123') {\n      return true;\n    } else if (userType === 'arrendatario' && username === 'arrendatario' && password === 'arrendatario123') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoginComponent","ngOnInit","Error","login","username","password","userType","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Downloads\\responsivewebsiteangular12-master\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Injectable, OnInit  } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  ngOnInit(): void {\r\n      throw new Error('Method not implemented.');\r\n  }\r\n\r\n  public login(username: string, password: string, userType: string): boolean {\r\n    // Aquí puedes implementar la lógica para verificar el inicio de sesión en el lado del cliente.\r\n    // Por ejemplo, podrías comparar los datos con una lista de usuarios predefinidos.\r\n    if (userType === 'estudiante' && username === 'estudiante' && password === 'estudiante123') {\r\n      return true;\r\n    } else if (userType === 'arrendatario' && username === 'arrendatario' && password === 'arrendatario123') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAKA,OAAM,MAAOA,cAAc;EACzBC,QAAQA,CAAA;IACJ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;EAEOC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB,EAAEC,QAAgB;IAC/D;IACA;IACA,IAAIA,QAAQ,KAAK,YAAY,IAAIF,QAAQ,KAAK,YAAY,IAAIC,QAAQ,KAAK,eAAe,EAAE;MAC1F,OAAO,IAAI;KACZ,MAAM,IAAIC,QAAQ,KAAK,cAAc,IAAIF,QAAQ,KAAK,cAAc,IAAIC,QAAQ,KAAK,iBAAiB,EAAE;MACvG,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;;SAfWL,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAO,OAAA,EAAdP,MAAc,CAAAQ,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}